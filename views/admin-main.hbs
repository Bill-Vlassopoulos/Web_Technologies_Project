<div class="button-add-ergo"><button class="prosthiki" onclick="addErgo()">Προσθήκη Νέου Έργου</button></div>
<div id="exhibitions-container"></div>

<script>
    // Example data
    let erga = {{{ erga }}}
    let current_exhibition = {{{ ektheseis }}}
    console.log(erga.filter(ergo => ergo.arithmos_ergou == "s0019V1962"));
    current_exhibition.unshift({ id_ekthesis: 1, onoma_ekthesis: "Μόνιμη Έκθεση" });
    current_exhibition.push({ id_ekthesis: null, onoma_ekthesis: "Αποθήκη" });

    function createExhibitionContainer(exhibition) {
        const container = document.createElement('div');
        container.className = 'katigoria-ergon container';
        container.id = `exhibition-${exhibition.id_ekthesis}`;

        const title = document.createElement('h3');
        title.innerText = exhibition.onoma_ekthesis;

        const hr = document.createElement('hr');

        const grid = document.createElement('div');
        grid.className = 'grid-erga';

        container.appendChild(title);
        container.appendChild(hr);
        container.appendChild(grid);

        document.getElementById('exhibitions-container').appendChild(container);
    }

    function addErgo() {
        window.location.href = "/admin/addPainting";
    }

    function edit(arithmos_ergou) {
        window.location.href = `/admin/edit/${arithmos_ergou}`;
    }

    function deleteErgo(arithmos_ergou) {
        if (confirm('Είστε σίγουρος ότι θέλετε να διαγράψετε το έργο;')) {
            window.location.href = `/admin/delete/${arithmos_ergou}`;
        }
    }

    function createErgoElement(ergo) {
        return new Promise((resolve, reject) => {
            const ergoDiv = document.createElement('div');
            ergoDiv.className = 'ergo';

            const img = document.createElement('img');
            img.src = ergo.link;
            img.alt = '';

            img.onload = () => {
                const h5Onoma = document.createElement('h5');
                h5Onoma.innerText = ergo.onoma;

                const h5Arithmos = document.createElement('h5');
                h5Arithmos.innerText = ergo.arithmos_ergou;

                const buttonsDiv = document.createElement('div');
                buttonsDiv.className = 'buttons';

                const editButton = document.createElement('button');
                editButton.className = 'epex';
                editButton.innerText = 'Επεξεργασία';
                editButton.onclick = () => edit(ergo.arithmos_ergou);

                const deleteButton = document.createElement('button');
                deleteButton.className = 'diag';
                deleteButton.innerText = 'Διαγραφή';
                deleteButton.onclick = () => deleteErgo(ergo.arithmos_ergou);

                buttonsDiv.appendChild(editButton);
                buttonsDiv.appendChild(deleteButton);

                ergoDiv.appendChild(img);
                ergoDiv.appendChild(h5Onoma);
                ergoDiv.appendChild(h5Arithmos);
                ergoDiv.appendChild(buttonsDiv);

                resolve(ergoDiv);
            };

            img.onerror = () => {
                console.error(`Error loading image: ${ergo.link}`);
                img.src = 'path/to/default/image.jpg';  // Fallback image in case of an error
                img.onload = () => {
                    const h5Onoma = document.createElement('h5');
                    h5Onoma.innerText = ergo.onoma;

                    const h5Arithmos = document.createElement('h5');
                    h5Arithmos.innerText = ergo.arithmos_ergou;

                    const buttonsDiv = document.createElement('div');
                    buttonsDiv.className = 'buttons';

                    const editButton = document.createElement('button');
                    editButton.className = 'epex';
                    editButton.innerText = 'Επεξεργασία';
                    editButton.onclick = () => edit(ergo.arithmos_ergou);

                    const deleteButton = document.createElement('button');
                    deleteButton.className = 'diag';
                    deleteButton.innerText = 'Διαγραφή';
                    deleteButton.onclick = () => deleteErgo(ergo.arithmos_ergou);

                    buttonsDiv.appendChild(editButton);
                    buttonsDiv.appendChild(deleteButton);

                    ergoDiv.appendChild(img);
                    ergoDiv.appendChild(h5Onoma);
                    ergoDiv.appendChild(h5Arithmos);
                    ergoDiv.appendChild(buttonsDiv);

                    resolve(ergoDiv);
                };
                img.onerror = () => {
                    reject(new Error(`Error loading fallback image: ${img.src}`));
                };
            };
        });
    }

    // Create containers for each exhibition
    current_exhibition.forEach(exhibition => {
        createExhibitionContainer(exhibition);
    });

    // Append erga to their respective exhibition container
    async function appendErgaToExhibitions() {
        const fragmentMap = new Map();

        // Create document fragments for each exhibition
        current_exhibition.forEach(exhibition => {
            fragmentMap.set(exhibition.id_ekthesis, document.createDocumentFragment());
        });

        // Load all images concurrently and append them to fragments
        await Promise.all(erga.map(async (ergo) => {
            try {
                const ergoElement = await createErgoElement(ergo);
                const fragment = fragmentMap.get(ergo.id_ekthesis);
                if (fragment) {
                    fragment.appendChild(ergoElement);
                }
            } catch (error) {
                console.error(error);
            }
        }));

        // Append fragments to the DOM
        fragmentMap.forEach((fragment, id_ekthesis) => {
            const exhibitionContainer = document.querySelector(`#exhibition-${id_ekthesis} .grid-erga`);
            if (exhibitionContainer) {
                exhibitionContainer.appendChild(fragment);
            }
        });
    }

    appendErgaToExhibitions();
</script>