 <form class="update-form">
    <div class="plirofories">
        <div class="titlos">
            <label for="titlos">Tίτλος</label>
            <input type="text" id="titlos" name="title" value="{{ekthes.onoma_ekthesis}}">
        </div>

        <div class="perigrafi">
            <label for="content">Περιγραφή</label>
            <textarea id="content" name="content" rows="10">{{ekthes.perigrafi}}</textarea>
        </div>

        <div class="aithousa">
         <label for="aithousa">Επιλέξτε Αίθουσα</label>
            <select name="aithousa" id="aithousa" required>
                <option value="1">Αίθουσα 1</option>
                <option value="2">Αίθουσα 2</option>
                <option value="3">Αίθουσα 3</option>
            </select>
        </div>

            <div class="imerom">
                <label for="datePicker">Διάρκεια Έκθεσης:</label>
                <input type="text" id="datePicker" placeholder="Επιλέξτε Ημερομηνία" required>
            </div>


        <div class="buttons">
            <button class="submit-btn" type="submit">Αποθήκευση</button>
            <a href="/admin/Exhibitions">Ακύρωση</a>
        </div>

     

    </div>

    <div class="image-link">
        <img src={{ekthes.link}} class="edit-image">
        <label for="link">Link Εικόνας</label>
        <input type="text" id="link" name="link" value="{{ekthes.link}}">
    </div>
</form>

<script>

    document.addEventListener('DOMContentLoaded', function() {
        const dateRanges = {{{ aithousa }}};

        //console.log('Parsed dateRanges:', dateRanges);

        const defaultStartDate = "{{ ekthes.imerominia_enarxis }}";
        const defaultEndDate = "{{ ekthes.imerominia_lixis }}";

        //console.log('defaultStartDate:', defaultStartDate);
        //console.log('defaultEndDate:', defaultEndDate);

        // Transform the array of objects to Flatpickr disable format
        const disabledDates = dateRanges.map(range => ({
            from: range.imerominia_enarxis_modified,
            to: range.imerominia_lixis
        })).filter(range => {
            // Check if the range overlaps with the default date range
            const defaultStart = new Date(defaultStartDate);
            const defaultEnd = new Date(defaultEndDate);
            const rangeStart = new Date(range.from);
            const rangeEnd = new Date(range.to);

            return (rangeEnd < defaultStart || rangeStart > defaultEnd);
        });

        //console.log('Filtered Disabled Dates:', disabledDates);

        flatpickr("#datePicker", {
            enableTime: false,
            mode: "range",
            minDate: "today",
            defaultDate: [defaultStartDate, defaultEndDate],
            dateFormat: "Y-m-d",
            disable: disabledDates
        });
    });

    document.getElementById('aithousa').value={{ekthes.id_aithousas}}

</script>